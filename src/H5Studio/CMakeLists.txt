include(${H5StudioProj_SOURCE_DIR}/cmake/Utilities.cmake)

#--------------------------------------------------------------------------------------------------
# Declare the H5Studio Project
#--------------------------------------------------------------------------------------------------
project(H5Studio
  VERSION 0.1.0
  DESCRIPTION "H5Studio Application"
  LANGUAGES CXX
)


# -----------------------------------------------------------------------
# Ensure we have a valid C++ string by replacing windows style "\" with "/"
# -----------------------------------------------------------------------
file(TO_CMAKE_PATH ${H5Studio_SOURCE_DIR} SOURCE_DIR)
#ConvertPathToHeaderCompatible(SOURCE_DIR)

# -----------------------------------------------------------------------
# Do we want to show the Style Sheet Editor. OFF by default
# -----------------------------------------------------------------------
option(H5Studio_USE_STYLESHEETEDITOR "Show the Style Sheet Editor" OFF)
set(CMP_VERSION_HDR_TEMPLATE_FILE ${H5Studio_SOURCE_DIR}/H5StudioVersion.h)
set(CMP_VERSION_SRC_TEMPLATE_FILE ${H5Studio_SOURCE_DIR}/H5StudioVersion.cpp.in)
set(VERSION_GEN_HEADER_FILE_NAME "H5StudioVersion.h")

cmpBuildDateRevisionString(GENERATED_HEADER_FILE_PATH "H5StudioVersion.h"
      GENERATED_SOURCE_FILE_PATH "H5StudioVersion.cpp"
      NAMESPACE H5Studio
      PROJECT_NAME H5Studio
      EXPORT_MACRO ""
      VERSION_MACRO_PATH ""
      STRING_CLASS QString
      STRING_INCLUDE "#include <QtCore/QString>"
)


# ---------- Set up the Project Source Files ------------------
# with SET() command you can change variables or define new ones
# here we define H5Studio_SRCS variable that contains a list of all .cpp files
# note that we don't need \ at the end of line
SET( H5Studio_SRCS
  ${H5Studio_SOURCE_DIR}/main.cpp
  ${H5Studio_SOURCE_DIR}/H5Studio.cpp
  ${H5Studio_SOURCE_DIR}/QHDFDataTableWindow.cpp
  ${H5Studio_SOURCE_DIR}/QHDFStringDataWindow.cpp
  ${H5Studio_SOURCE_DIR}/QHDFImageDataWindow.cpp
  ${H5Studio_SOURCE_DIR}/QHDFGroupPropertiesWindow.cpp
  ${H5Studio_SOURCE_DIR}/QHDFPropertiesWindow.cpp
  ${H5Studio_SOURCE_DIR}/H5StudioApplication.cpp
  ${H5Studio_SOURCE_DIR}/IH5DataWindow.cpp
  ${H5Studio_SOURCE_DIR}/QDockUtilities.cpp
  ${H5Studio_SOURCE_DIR}/QHDF5TableModel.cpp
  ${H5Studio_SOURCE_DIR}/QHDF5TreeModelItem.cpp
  ${H5Studio_SOURCE_DIR}/QHDF5TreeModel.cpp
  ${H5Studio_SOURCE_DIR}/HDFGraphicsDelegate.cpp
  ${H5Studio_SOURCE_DIR}/QRecentFileList.cpp
  ${H5Studio_SOURCE_DIR}/ImageDataToolbar.cpp
  
)

set(H5Studio_HDRS
  ${H5Studio_SOURCE_DIR}/QDockUtilities.h
)


SET( H5Studio_MOC_HDRS
  ${H5Studio_SOURCE_DIR}/H5StudioApplication.h
  ${H5Studio_SOURCE_DIR}/H5Studio.h
  ${H5Studio_SOURCE_DIR}/QHDFDataTableWindow.h
  ${H5Studio_SOURCE_DIR}/QHDFStringDataWindow.h
  ${H5Studio_SOURCE_DIR}/QHDFImageDataWindow.h
  ${H5Studio_SOURCE_DIR}/QHDFGroupPropertiesWindow.h
  ${H5Studio_SOURCE_DIR}/QHDFPropertiesWindow.h
  ${H5Studio_SOURCE_DIR}/QHDF5TableModel.h
  ${H5Studio_SOURCE_DIR}/IQHDF5Dataset.h
  ${H5Studio_SOURCE_DIR}/QHDF5TreeModel.h
  ${H5Studio_SOURCE_DIR}/IH5DataWindow.h
  ${H5Studio_SOURCE_DIR}/HDFGraphicsDelegate.h
  ${H5Studio_SOURCE_DIR}/IQPixmapGenerator.h
  ${H5Studio_SOURCE_DIR}/QRecentFileList.h
  ${H5Studio_SOURCE_DIR}/ImageDataToolbar.h
)

set_source_files_properties( ${H5Studio_Generated_MOC_SRCS} PROPERTIES GENERATED TRUE)
set_source_files_properties( ${H5Studio_Generated_MOC_SRCS} PROPERTIES HEADER_FILE_ONLY TRUE)

# The UI files (As generated by Qt Designer
SET( H5Studio_UIS
  ${H5Studio_SOURCE_DIR}/UI_Files/H5Studio.ui
  ${H5Studio_SOURCE_DIR}/UI_Files/QHDFDataTableWindow.ui
  ${H5Studio_SOURCE_DIR}/UI_Files/QHDFStringDataWindow.ui
  ${H5Studio_SOURCE_DIR}/UI_Files/QHDFImageDataWindow.ui
  ${H5Studio_SOURCE_DIR}/UI_Files/QHDFGroupPropertiesWindow.ui
  ${H5Studio_SOURCE_DIR}/UI_Files/QHDFPropertiesWindow.ui
  )

QT5_WRAP_UI( H5Studio_Generated_UI_HDRS ${H5Studio_UIS})
foreach(h ${H5Studio_Generated_UI_HDRS} ${H5Studio_Generated_RC_SRCS})
  set_property(SOURCE ${h} PROPERTY SKIP_AUTOMOC ON)
endforeach()

# and finally any resource files
#SET(H5Studio_RCS ${H5Studio_SOURCE_DIR}/Templates.qrc)

# -- Run MOC and UIC on the necessary files
QT5_ADD_RESOURCES( H5Studio_Generated_RC_SRCS ${H5Studio_RCS} ${QRC_LICENSE_FILES})


# -- Finally set the Project Sources to include all the sources
# -----------------------------------------------------------------------
# Gather all of the files to be compiled into a single variable
# -----------------------------------------------------------------------
set(H5Studio_APPLICATION_FILES
  ${H5Studio_SRCS}
  ${H5Studio_HDRS}
  ${H5Studio_MOC_HDRS}
  ${H5Studio_Generated_MOC_SRCS}
  ${H5Studio_UIS}
  ${H5Studio_Generated_UI_HDRS}
  ${H5Studio_RCS}
  ${H5Studio_Generated_RC_SRCS}
)

# -----------------------------------------------------------------------
# Define the libraries to link against
# -----------------------------------------------------------------------
set(H5Studio_LINK_LIBRARIES
  Qt5::Core Qt5::Gui Qt5::Widgets Qt5::Network
  
  hdf5::hdf5
  H5Support::H5Support
)


if(APPLE)
    set(APPLICATION_ICON ${H5Studio_SOURCE_DIR}/Resources/icons/icns/${PROJECT_NAME}.icns)
endif(APPLE)

if(Q_WS_WIN)
    set(APPLICATION_ICON ${H5Studio_SOURCE_DIR}/Resources/icons/ico/${PROJECT_NAME}.ico)
ENDif(Q_WS_WIN)

set(DEST_DIR ".")
if(UNIX AND NOT APPLE)
    set(DEST_DIR "bin")
endif()

# -----------------------------------------------------------------------
# Call the function to generate a Qt based application
# -----------------------------------------------------------------------
Build_Qt_Application_Bundle(
      TARGET ${PROJECT_NAME}
      SOURCES ${H5Studio_APPLICATION_FILES}
      DEBUG_EXTENSION ${EXE_DEBUG_EXTENSION}
      ICON_FILE  ${APPLICATION_ICON}
      VERSION_MAJOR ${H5Studio_VERSION_MAJOR}
      VERSION_MINOR ${H5Studio_VERSION_MINOR}
      VERSION_PATCH ${H5Studio_VERSION_PATCH}
      BINARY_DIR    ${${PROJECT_NAME}_BINARY_DIR}
      LINK_LIBRARIES ${H5Studio_LINK_LIBRARIES}
      LIB_SEARCH_DIRS ${VTK_LIB_PATH} ${CMAKE_LIBRARY_OUTPUT_DIRECTORY} ${CMAKE_RUNTIME_OUTPUT_DIRECTORY} ${COMPLEX_EXTRA_LIBRARY_DIRS}
      QT_PLUGINS    ${QT_PLUGINS}
      QT5_MODULES   ${H5StudioProj_Qt5_Components}
      OTHER_PLUGINS ${H5Studio_PLUGINS}
      PLUGIN_LIST_FILE ${CMP_PLUGIN_LIST_FILE}
      COMPONENT     Applications
      INSTALL_DEST  ${DEST_DIR}
)


